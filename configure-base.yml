---
- hosts: all
  remote_user: bootstrap
  gather_facts: yes

  vars:
    packages: { "git", "ntp", "psmisc", "net-tools", "libselinux-python", "which", "gcc-c++", "keepalived", "haproxy", "bind", "bind-utils", "ccache",
                "fortune-mod", "frotz", "lrzsz", "ii", "epic", "BitchX", "mailx", "postfix", "net-snmp", "net-snmp-utils", "mlocate", "telnet",
                "postfix-perl-scripts", "rsyslog", "httpd", "openldap", "openldap-clients", "openldap-servers", "nodejs", "golang", "monit" }


  vars_prompt:
    - name: "ansible_password"
      prompt: "Enter password for bootstrap user"
      hidden: yes

  tasks:
  - name: set hostname permanently
    shell: "/usr/bin/hostnamectl set-hostname {{ inventory_hostname }}"
    become: true

  - name: display hostname
    shell: /usr/bin/hostname -f

  - name: set selinux to permissive
    shell: /sbin/setenforce 0
    become: true

  - name: install libselinux-python package early
    dnf:
      name: libselinux-python 
      state: present
    become: true
    tags:
      - installpackages
    

  - name: install /etc/hosts file
    copy:
      dest: /etc/hosts
      src: files/etc/hosts
      owner: root
      group: root
      mode: 0o644
    become: true

  - name: install /etc/dnf/dnf.conf file
    copy:
      dest: /etc/dnf/dnf.conf
      src: files/etc/dnf/dnf.conf
      owner: root
      group: root
      mode: 0o644
    become: true

  - name: install /etc/dhcp/dhclient.conf file
    template:
      dest: /etc/dhcp/dhclient.conf
      src: files/etc/dhcp/dhclient.conf
      owner: root
      group: root
      mode: 0o644
    become: true
    tags:
      - network

  - name: install sfdisk-mmcblk0 (partition layout) file
    template:
      dest: /root/sfdisk-mmcblk0
      src: config/sfdisk-mmcblk0 
      owner: root
      group: root
      mode: 0o644
    become: true
    tags:
      - disk

  - name: check /dev/mmcblk0p2 size in sectors
    shell: "cat /sys/block/mmcblk0/mmcblk0p2/size"
    register: root_partition_size
    become: true
    tags: 
      - disk

  - debug: msg="root disk size in sectors is {{ root_partition_size.stdout }}"
    delegate_to: localhost
    become: true
    tags: 
      - disk

  - debug: msg="Root disk does not need resizing"
    when: root_partition_size.stdout == '15022080'
    delegate_to: localhost
    become: true
    tags: 
      - disk

  - debug: msg="Root disk needs resizing"
    when: root_partition_size.stdout != '15022080'
    delegate_to: localhost
    become: true
    tags: 
      - disk

  # live dangerously!

  - name: resize root partition to 15022080 sectors
    shell: "/usr/sbin/sfdisk --force /dev/mmcblk0 < /root/sfdisk-mmcblk0"
    when: root_partition_size.stdout != '15022080'
    become: true
    tags: 
      - disk

  - name: probe new partition layout 
    shell: "/usr/sbin/partprobe /dev/mmcblk0"
    when: root_partition_size.stdout != '15022080'
    become: true
    tags: 
      - disk

  - name: expand root filesystem  
    shell: "/usr/sbin/resize2fs /dev/mmcblk0p2"
    when: root_partition_size.stdout != '15022080'
    become: true
    tags: 
      - disk

  - name: restart NetworkManager to pickup resolver settings
    service:
      name: NetworkManager
      state: restarted
      enabled: yes
    become: true
    tags:
      - network

  - name: install prerequisite packages
    dnf:
      name: "{{ item }}"
      state: present
    with_items: "{{ packages }}"
    become: true
    tags:
      - installpackages
      - ntpd

  - name: restart and enable rsyslog
    service:
      name: rsyslog
      state: restarted
      enabled: yes
    become: true
    tags:
      - rsyslog

  # this doesn't work until the libselinux-python package is installed 

  - name: set selinux to permissive
    lineinfile:
      path: /etc/sysconfig/selinux
      regexp: '^SELINUX=.*$'
      line: 'SELINUX=permissive'
    become: true


  - name: stop & disable monit
    service:
      name: monit
      state: stopped 
      enabled: no 
    become: true
    tags:
      - monit
      - monitstop


  - name: create /var/log/named
    file:
      dest: /var/log/named
      state: directory
      owner: named
      group: named
      recurse: true
    become: true
    tags:
      - named

  - name: install /etc/named.conf
    template:
      dest: /etc/named.conf
      src: files/etc/named.conf
      owner: root
      group: root
      mode: 0o644
    become: true
    tags:
      - named

  - name: start & enable named
    service:
      name: named
      state: restarted
      enabled: yes
    become: true
    tags:
      - named

  - name: display named status
    shell: /bin/systemctl status named.service
    become: true
    tags:
      - named

  - name: install /var/www/html/index.html file 
    template:
      dest: /var/www/html/index.html
      src: content/index.html 
      owner: nobody 
      group: nobody
      mode: 0o644
    become: true
    tags:
      - httpd 
      - content

  - name: set Apache default port to 8080 
    lineinfile:
      path: /etc/httpd/conf/httpd.conf
      regexp: '^Listen [0-8]+$'
      line: 'Listen 8080'
    become: true
    tags:
      - httpd

  - name: install monitrc 
    template:
      dest: /etc/monitrc
      src: "files/etc/monitrc"
      owner: root
      group: root
      mode: 0o700
    become: true
    tags:
      - monit 

  - name: install monit cron job
    template:
      dest: /var/spool/cron/root
      src: "files/var/spool/cron/root"
      owner: root
      group: root
      mode: 0o600
    become: true
    tags:
      - monit

  - name: start & enable httpd 
    service:
      name: httpd
      state: restarted
      enabled: yes
    become: true
    tags:
      - httpd

  - name: display httpd status
    shell: /bin/systemctl status httpd.service
    become: true
    tags:
      - httpd

  - name: set timezone
    shell: timedatectl set-timezone Australia/Melbourne
    become: true

  - name: display timezone
    shell: timedatectl
    become: true

  # Redhat considers this method deprecated. Look up what do to instead. 
  # https://docs-old.fedoraproject.org/en-US/Fedora/26/html/System_Administrators_Guide/s1-Configure_ntpdate_Servers.html
 
  - name: remove pool.fedora.org servers from ntpdate step-tickers 
    lineinfile:
      path: /etc/ntp/step-tickers
      regexp: '^.*fedora.*$'
      state: absent
    become: true
    tags:
      - ntpd

  - name: add mightymouse to ntpdate step-tickers 
    lineinfile:
      path: /etc/ntp/step-tickers
      regexp: '^192\.168\.0\.100$'
      line: "192.168.0.100"
      state: present 
    become: true
    tags:
      - ntpd


  - name: start & enable ntpdate
    service:
      name: ntpdate
      state: restarted
      enabled: yes
    become: true
    tags:
      - ntpd

  - name: start & enable ntpd
    service:
      name: ntpd
      state: restarted
      enabled: yes
    become: true
    tags:
      - ntpd

  - name: set mail relay host for postfix
    shell: /usr/sbin/postconf -e relayhost=mail.optusnet.com.au
    become: true
    tags:
      - postfix

  - name: set inet_interfaces for postfix
    shell: /usr/sbin/postconf -e inet_interfaces=all
    become: true
    tags:
      - postfix

  - name: set mynetworks for postfix
    shell: /usr/sbin/postconf -e mynetworks=192.168.0.0/24
    become: true
    tags:
      - postfix

  # WARNING: do not do this for production or you will lose all mail!
  - name: set mail relay host for postfix
    shell: /usr/sbin/postsuper -d ALL
    become: true
    tags:
      - postfix

  - name: start and enable postfix
    service:
      name: postfix
      state: restarted
      enabled: yes
    become: true
    tags:
      - postfix

  - name: remove ~/git-local/bbsd
    file:
      dest: ~/git-local/bbsd
      state: absent    
    tags:
      - bbsd

  - name: create ~/git-local/bbsd
    file:
      dest: ~/git-local/bbsd
      state: directory
      recurse: true
    tags:
      - bbsd

  - name: checkout bbsd sources to ~/git-local/bbsd
    git:
      repo: 'https://github.com/dmo9000/bbsd.git'
      dest: ~/git-local/bbsd
    tags:
      - bbsd

  - name: build bbsd sources
    shell: "(cd ~/git-local/bbsd &&  make clean && make)"
    tags:
      - bbsd   

  - name: stop bbsd prior to upgrade
    service:
      name: bbsd
      state: stopped
      enabled: yes
    become: true
    tags:
      - bbsd
      - bbsd_stop

  - name: install bbsd
    shell: "(cd /home/bootstrap/git-local/bbsd && make install)"
    become: true
    tags:
      - bbsd   

  - name: show installation
    shell: find /usr/local/bbsd
    tags:
      - bbsd

  - name: discover vrrp_priority
    set_fact:
      vrrp_priority: "{{ ansible_eth0.ipv4.address.split('.')[3] }}"
    tags:
      - keepalived

  - debug: msg="vrrp_priority is {{ vrrp_priority }}"
    tags:
      - keepalived

  - name: install keepalived.conf
    template:
      dest: /etc/keepalived/keepalived.conf
      src: "files/etc/keepalived/keepalived.conf.{{ inventory_hostname }}"
      owner: root
      group: root
      mode: 0o644
    become: true
    tags:
      - keepalived

  - name: start & enable keepalived
    service:
      name: keepalived
      state: restarted
      enabled: yes
    become: true
    tags:
      - keepalived

  - name: display keepalived status
    shell: /bin/systemctl status keepalived.service
    become: true
    tags:
      - keepalived

  - name: display keepalived vip
    shell: /sbin/ip addr show 
    become: true
    tags:
      - keepalived

  - name: start & enable bbsd
    service:
      name: bbsd
      state: restarted
      enabled: yes
    become: true
    tags:
      - bbsd
      - bbsd_restart

  - name: systemctl daemon-reload
    shell: /usr/bin/systemctl daemon-reload
    become: true
    tags:
      - bbsd

  - name: show bbsd service status
    shell: systemctl status bbsd
    become: true
    tags:
      - bbsd
      - bbsd_status


  - name: install haproxy.cfg
    template:
      dest: /etc/haproxy/haproxy.cfg
      src: files/etc/haproxy/haproxy.cfg
      owner: root
      group: root
      mode: 0o644
    become: true
    tags:
      - haproxy

  - name: start & enable haproxy
    service:
      name: haproxy
      state: restarted
      enabled: yes
    become: true
    tags:
      - haproxy
      - haproxy_restart


  - name: refresh OEM software
    git:
      repo: 'https://github.com/dmo9000/z80core.git'
      dest: ~/git-local/z80core
    tags:
      - oemsoftware   

  - name: make OEM software available
    shell: cp /home/bootstrap/git-local/z80core/z80oem/*.arc /usr/local/bbsd/data/
    become: true
    tags:
      - oemsoftware

#  - name: start & enable monit
#    service:
#      name: monit
#      state: restarted
#      enabled: yes
#    become: true
#    tags:
#      - monit

