---
- hosts: all 
  remote_user: bootstrap 
  gather_facts: yes 

  vars:
    packages: { "git", "ntp", "psmisc", "net-tools", "libselinux-python", "which", "gcc-c++", "keepalived", "haproxy", "bind", "bind-utils", "ccache", 
                "fortune-mod", "frotz", "lrzsz", "ii", "epic", "BitchX", "mailx", "postfix", "net-snmp", "net-snmp-utils", "mlocate", "telnet", 
                "postfix-perl-scripts", "rsyslog", "httpd", "openldap", "openldap-clients", "openldap-servers", "nodejs", "golang" }


  vars_prompt:
    - name: "ansible_password"
      prompt: "Enter password for bootstrap user" 
      hidden: yes

  tasks:
  - name: set hostname permanently 
    shell: "/usr/bin/hostnamectl set-hostname {{ inventory_hostname }}"
    become: true

  - name: display hostname 
    shell: /usr/bin/hostname -f

  - name: set selinux to permissive
    shell: /sbin/setenforce 0
    become: true

  - name: set selinux to permissive
    lineinfile:
      path: /etc/sysconfig/selinux
      regexp: '^SELINUX='
      line: 'SELINUX=permissive'
    become: true

  - name: install /etc/dhcp/dhclient.conf file
    template:
      dest: /etc/dhcp/dhclient.conf
      src: files/etc/dhcp/dhclient.conf
      owner: root
      group: root
      mode: 0o644
    become: true
    tags:
      - network 

  - name: restart and enable rsyslog 
    service:
      name: rsyslog 
      state: restarted
      enabled: yes
    become: true
    tags:
      - rsyslog 

  - name: restart NetworkManager to pickup resolver settings
    service:
      name: NetworkManager 
      state: restarted
      enabled: yes
    become: true
    tags:
      - network 

  - name: install /etc/hosts file
    copy:
      dest: /etc/hosts
      src: files/etc/hosts
      owner: root
      group: root
      mode: 0o644 
    become: true

  - name: install /etc/dnf/dnf.conf file
    copy:
      dest: /etc/dnf/dnf.conf
      src: files/etc/dnf/dnf.conf
      owner: root
      group: root
      mode: 0o644 
    become: true

  - name: install prerequisite packages
    dnf: 
      name: "{{ item }}"
      state: present
    with_items: "{{ packages }}"
    become: true
    tags:
      - installpackages
      - ntpd

  - name: create /var/log/named 
    file:
      dest: /var/log/named
      state: directory
      owner: named
      group: named
      recurse: true
    become: true
    tags:
      - named 

  - name: install /etc/named.conf 
    template:
      dest: /etc/named.conf
      src: files/etc/named.conf
      owner: root
      group: root
      mode: 0o644
    become: true
    tags:
      - named 

  - name: start & enable named
    service: 
      name: named
      state: restarted
      enabled: yes
    become: true
    tags:
      - named 

  - name: display named status
    shell: /bin/systemctl status named.service
    become: true
    tags:
      - named

  - name: set timezone
    shell: timedatectl set-timezone Australia/Melbourne
    become: true

  - name: display timezone
    shell: timedatectl 
    become: true

  - name: start & enable ntpd
    service: 
      name: ntpd
      state: restarted
      enabled: yes
    become: true
    tags:
      - ntpd

  - name: set mail relay host for postfix
    shell: /usr/sbin/postconf -e relayhost=mail.optusnet.com.au
    become: true
    tags:
      - postfix 

  - name: start and enable postfix
    service: 
      name: postfix
      state: restarted
      enabled: yes
    become: true
    tags:
      - postfix 

  - name: remove ~/git-local/bbsd
    file:
      dest: ~/git-local/bbsd 
      state: absent     
    tags:
      - bbsd

  - name: create ~/git-local/bbsd
    file:
      dest: ~/git-local/bbsd 
      state: directory
      recurse: true
    tags:
      - bbsd

  - name: checkout bbsd sources to ~/git-local/bbsd
    git:
      repo: 'https://github.com/dmo9000/bbsd.git'
      dest: ~/git-local/bbsd
    tags:
      - bbsd

  - name: build bbsd sources
    shell: "(cd ~/git-local/bbsd &&  make clean && make)"
    tags:
      - bbsd    

  - name: stop bbsd prior to upgrade
    service: 
      name: bbsd
      state: stopped
      enabled: yes
    become: true
    tags:
      - bbsd
      - bbsd_stop

  - name: install bbsd 
    shell: "(cd /home/bootstrap/git-local/bbsd && make install)"
    become: true
    tags:
      - bbsd    

  - name: show installation
    shell: find /usr/local/bbsd
    tags:
      - bbsd

  - name: discover vrrp_priority
    set_fact:
      vrrp_priority: "{{ ansible_eth0.ipv4.address.split('.')[3] }}" 
    tags:
      - keepalived

  - debug: msg="vrrp_priority is {{ vrrp_priority }}"
    tags:
      - keepalived

  - name: install keepalived.conf
    template:
      dest: /etc/keepalived/keepalived.conf
      src: "files/etc/keepalived/keepalived.conf.{{ inventory_hostname }}"
      owner: root
      group: root
      mode: 0o644
    become: true
    tags:
      - keepalived

  - name: start & enable keepalived
    service: 
      name: keepalived
      state: restarted
      enabled: yes
    become: true
    tags:
      - keepalived

  - name: display keepalived status
    shell: /bin/systemctl status keepalived.service 
    become: true
    tags:
      - keepalived

  - name: display keepalived vip 
    shell: /sbin/ip addr show  
    become: true
    tags:
      - keepalived

  - name: start & enable bbsd
    service: 
      name: bbsd
      state: restarted
      enabled: yes
    become: true
    tags:
      - bbsd
      - bbsd_restart

  - name: systemctl daemon-reload
    shell: /usr/bin/systemctl daemon-reload
    become: true
    tags:
      - bbsd

  - name: show bbsd service status
    shell: systemctl status bbsd
    become: true
    tags:
      - bbsd
      - bbsd_status


  - name: install haproxy.cfg
    template:
      dest: /etc/haproxy/haproxy.cfg
      src: files/etc/haproxy/haproxy.cfg
      owner: root
      group: root
      mode: 0o644
    become: true
    tags:
      - haproxy

  - name: start & enable haproxy
    service: 
      name: haproxy
      state: restarted
      enabled: yes
    become: true
    tags:
      - haproxy
      - haproxy_restart


  - name: refresh OEM software
    git:
      repo: 'https://github.com/dmo9000/z80core.git'
      dest: ~/git-local/z80core
    tags:
      - oemsoftware    

  - name: make OEM software available
    shell: cp /home/bootstrap/git-local/z80core/z80oem/*.arc /usr/local/bbsd/data/
    become: true
    tags:
      - oemsoftware 
