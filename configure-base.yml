---
- hosts: all
  remote_user: bootstrap
  gather_facts: yes

  vars:
    packages: { "tcpdump", "git", "ntp", "psmisc", "net-tools", "libselinux-python", "which", "gcc-c++", "keepalived", "haproxy", "bind", "bind-utils", "ccache",
                "fortune-mod", "frotz", "lrzsz", "ii", "epic", "BitchX", "mailx", "postfix", "net-snmp", "net-snmp-utils", "mlocate", "telnet",
                "postfix-perl-scripts", "rsyslog", "httpd", "openldap", "openldap-clients", "openldap-servers", "nodejs", "golang", "monit", "lsof",
                "rpm-build", "mc", "python-dnf", "selinux-policy", "setools-console", "policycoreutils-python-utils", "policycoreutils-devel", "python3-firewall", 
                "python-firewall", "kernel", "kernel-core", "kernel-modules" }

    firewall_ports: { "23/tcp", "25/tcp", "53/udp", "53/tcp", "80/tcp", "2812/tcp", "8024/tcp", "8080/tcp" } 

    monit_local: { "sshd", "postfix", "named", "haproxy", "bbsd", "docker", "httpd" }

  vars_prompt:
    - name: "ansible_password"
      prompt: "Enter password for bootstrap user"
      hidden: yes

  tasks:
  - name: set hostname permanently
    shell: "/usr/bin/hostnamectl set-hostname {{ inventory_hostname }}"
    become: true

  - name: display hostname
    shell: /usr/bin/hostname -f

  # this may fail if selinux is already disabled (ie. after a reboot), so exit 0 if that is the case
  - name: set selinux to permissive
    shell: /sbin/setenforce 0 || exit 0
    become: true
    tags:
      - selinux
        
  - name: install libselinux-python package early
    dnf:
      name: libselinux-python 
      state: present
    become: true
    tags:
      - installpackages
      - selinux

  - include: roles/docker.yml 

  - name: install managed /boot/grub/grub.conf file
    template:
      dest: /boot/grub/grub.conf
      src: files/boot/grub/grub.conf
      owner: root
      group: root
      mode: 0o664
    become: true
    tags:
      - network


  - name: install /etc/hosts file
    copy:
      dest: /etc/hosts
      src: files/etc/hosts
      owner: root
      group: root
      mode: 0o644
    become: true

  - name: install /etc/dnf/dnf.conf file
    copy:
      dest: /etc/dnf/dnf.conf
      src: files/etc/dnf/dnf.conf
      owner: root
      group: root
      mode: 0o644
    become: true

  - name: install /etc/dhcp/dhclient.conf file
    template:
      dest: /etc/dhcp/dhclient.conf
      src: files/etc/dhcp/dhclient.conf
      owner: root
      group: root
      mode: 0o644
    become: true
    tags:
      - network

  - name: install sfdisk-mmcblk0 (partition layout) file
    template:
      dest: /root/sfdisk-mmcblk0
      src: config/sfdisk-mmcblk0 
      owner: root
      group: root
      mode: 0o644
    become: true
    tags:
      - disk

  - name: check /dev/mmcblk0p4 size in sectors
    shell: "cat /sys/block/mmcblk0/mmcblk0p4/size"
    register: root_partition_size
    become: true
    tags: 
      - disk

  - debug: msg="root disk size in sectors is {{ root_partition_size.stdout }}"
    delegate_to: localhost
    become: true
    tags: 
      - disk

  - debug: msg="Root disk does not need resizing"
    when: root_partition_size.stdout == '60991488'
    delegate_to: localhost
    become: true
    tags: 
      - disk

  - debug: msg="Root disk needs resizing"
    when: root_partition_size.stdout != '60991488'
    delegate_to: localhost
    become: true
    tags: 
      - disk

  # live dangerously!

  - name: resize root partition to 60991488 sectors
    shell: "/usr/sbin/sfdisk --force /dev/mmcblk0 < /root/sfdisk-mmcblk0"
    when: root_partition_size.stdout != '60991488'
    become: true
    tags: 
      - disk

  - name: probe new partition layout 
    shell: "/usr/sbin/partprobe /dev/mmcblk0"
    when: root_partition_size.stdout != '60991488'
    become: true
    tags: 
      - disk

  - name: expand root filesystem  
    shell: "/usr/sbin/resize2fs /dev/mmcblk0p4"
    when: root_partition_size.stdout != '60991488'
    become: true
    tags: 
      - disk

  - name: restart NetworkManager to pickup resolver settings
    systemd:
      name: NetworkManager
      state: restarted
      enabled: yes
    become: true
    tags:
      - network

  - name: install prerequisite packages
    dnf:
      name: "{{ item }}"
      state: present
    with_items: "{{ packages }}"
    become: true
    tags:
      - installpackages
      - ntpd

  - name: install /etc/rsyslog.conf file
    template:
      dest: /etc/rsyslog.conf
      src: files/etc/rsyslog.conf
      owner: root
      group: root
      mode: 0o644
    become: true
    tags:
      - network

  - name: restart and enable rsyslog
    systemd:
      name: rsyslog
      state: restarted
      enabled: yes
    become: true
    tags:
      - rsyslog

  # this doesn't work until the libselinux-python package is installed 

  - name: set selinux to disabled 
    lineinfile:
      path: /etc/sysconfig/selinux
      regexp: '^SELINUX=.*$'
      line: 'SELINUX=disabled'
    become: true
    tags:
      - selinux

  - firewalld:
      port: "{{ item }}" 
      permanent: true
      state: enabled
      immediate: true
    with_items: "{{ firewall_ports }}" 
    become: true
    tags:
      - firewall

  - name: stop & disable monit
    systemd:
      name: monit
      state: stopped 
      enabled: no 
    become: true
    tags:
      - monit
      - monitstop


  - name: remove /etc/monit.d/logging
    file:
      dest: /etc/monit.d/logging
      state: absent
    become: true
    tags:
      - monit

  - name: install monit-generic-check.sh
    template:
      dest: /usr/local/bin/monit-{{ item }}-check.sh
      src: files/usr/local/bin/monit-generic-check.sh
      owner: root
      group: root
      mode: 0o755
    with_items: "{{ monit_local }}"
    become: true
    tags:
      - monit

  - name: enable NetworkManager-wait-online.service
    systemd:
      name: NetworkManager-wait-online
      enabled: yes
      state: restarted
    become: true
    tags:
      - named
      - networkmanager-wait-online


  # NOTE: apparently we can do this with a systemd "drop-in". Research.

  - name: install /usr/lib/systemd/system/named.service file
    copy:
      dest: /usr/lib/systemd/system/named.service
      src: files/usr/lib/systemd/system/named.service
      owner: root
      group: root
      mode: 0o644
    become: true
    tags:
      - named

  - name: create /var/log/named
    file:
      dest: /var/log/named
      state: directory
      owner: named
      group: named
      recurse: true
    become: true
    tags:
      - named

  - name: install /etc/named.conf
    template:
      dest: /etc/named.conf
      src: files/etc/named.conf
      owner: root
      group: root
      mode: 0o644
    become: true
    tags:
      - named

  - name: start & enable named
    systemd:
      name: named
      state: restarted
      enabled: yes
      daemon_reload: yes
    become: true
    tags:
      - named

  # wow. amazed that ansible::systemd doesn't support this yet. Some replacement for SysV init...

  - name: display named status
    shell: /bin/systemctl status named.service
    become: true
    tags:
      - named

  - name: install /var/www/html/index.html file 
    template:
      dest: /var/www/html/index.html
      src: content/index.html 
      owner: nobody 
      group: nobody
      mode: 0o644
    become: true
    tags:
      - httpd 
      - content

  - name: set Apache default port to 8080 
    lineinfile:
      path: /etc/httpd/conf/httpd.conf
      regexp: '^Listen [0-8]+$'
      line: 'Listen 8080'
    become: true
    tags:
      - httpd

  - name: install monitrc 
    template:
      dest: /etc/monitrc
      src: "files/etc/monitrc"
      owner: root
      group: root
      mode: 0o700
    become: true
    tags:
      - monit 

  - name: install monit cron job
    template:
      dest: /var/spool/cron/root
      src: "files/var/spool/cron/root"
      owner: root
      group: root
      mode: 0o600
    become: true
    tags:
      - monit

  - name: start & enable httpd 
    systemd:
      name: httpd
      state: restarted
      enabled: yes
    become: true
    tags:
      - httpd

  - name: display httpd status
    shell: /bin/systemctl status httpd.service
    become: true
    tags:
      - httpd

  - name: set timezone
    shell: timedatectl set-timezone Australia/Melbourne
    become: true

  - name: display timezone
    shell: timedatectl
    become: true
 
  - name: set mail relay host for postfix
    shell: /usr/sbin/postconf -e relayhost=mail.optusnet.com.au
    become: true
    tags:
      - postfix

  - name: set inet_interfaces for postfix
    shell: /usr/sbin/postconf -e inet_interfaces=all
    become: true
    tags:
      - postfix

  - name: set mynetworks for postfix
    shell: /usr/sbin/postconf -e mynetworks=192.168.0.0/24,127.0.0.1
    become: true
    tags:
      - postfix

  - name: start and enable postfix
    systemd:
      name: postfix
      state: restarted
      enabled: yes
    become: true
    tags:
      - postfix

  - name: remove ~/git-local/tdftool
    file:
      dest: ~/git-local/tdftool
      state: absent
    tags:
      - tdftool

  - name: create ~/git-local/tdftool
    file:
      dest: ~/git-local/tdftool
      state: directory
      recurse: true
    tags:
      - tdftool

  - name: checkout tdftool sources to ~/git-local/tdftool
    git:
      repo: 'https://github.com/dmo9000/tdftool.git'
      dest: ~/git-local/tdftool
    tags:
      - tdftool

  - name: build tdftool sources
    shell: "(cd ~/git-local/tdftool &&  make clean && make)"
    tags:
      - tdftool

  - name: install tdftool 
    shell: "(cd /home/bootstrap/git-local/tdftool && make install)"
    become: true
    tags:
      - tdftool

  - name: remove ~/git-local/bbsd
    file:
      dest: ~/git-local/bbsd
      state: absent    
    tags:
      - bbsd

  - name: create ~/git-local/bbsd
    file:
      dest: ~/git-local/bbsd
      state: directory
      recurse: true
    tags:
      - bbsd

  - name: checkout bbsd sources to ~/git-local/bbsd
    git:
      repo: 'https://github.com/dmo9000/bbsd.git'
      dest: ~/git-local/bbsd
    tags:
      - bbsd

  - name: build bbsd sources
    shell: "(cd ~/git-local/bbsd &&  make clean && make)"
    tags:
      - bbsd   

  - name: install /usr/lib/systemd/system/bbsd.service file
    copy:
      dest: /usr/lib/systemd/system/bbsd.service 
      src: files/usr/lib/systemd/system/bbsd.service
      owner: root
      group: root
      mode: 0o644
    become: true
    tags:
      - bbsd

  - name: stop bbsd prior to upgrade
    systemd:
      name: bbsd
      state: stopped
      enabled: yes
    become: true
    tags:
      - bbsd
      - bbsd_stop

  - name: install bbsd
    shell: "(cd /home/bootstrap/git-local/bbsd && make install)"
    become: true
    tags:
      - bbsd   

  - name: show installation
    shell: find /usr/local/bbsd
    tags:
      - bbsd

  - name: discover vrrp_priority
    set_fact:
      vrrp_priority: "{{ ansible_eth0.ipv4.address.split('.')[3] }}"
    tags:
      - keepalived

  - debug: msg="vrrp_priority is {{ vrrp_priority }}"
    tags:
      - keepalived

  - name: install keepalived.conf
    template:
      dest: /etc/keepalived/keepalived.conf
      src: "files/etc/keepalived/keepalived.conf.{{ inventory_hostname }}"
      owner: root
      group: root
      mode: 0o644
    become: true
    tags:
      - keepalived

  - name: start & enable keepalived
    systemd:
      name: keepalived
      state: restarted
      enabled: yes
    become: true
    tags:
      - keepalived
      - restart_keepalived

  - name: display keepalived status
    shell: /bin/systemctl status keepalived.service
    become: true
    tags:
      - keepalived

  - name: display keepalived vip
    shell: /sbin/ip addr show 
    become: true
    tags:
      - keepalived

  - name: start & enable bbsd
    systemd:
      name: bbsd
      state: restarted
      enabled: yes
      daemon_reload: yes
    become: true
    tags:
      - bbsd
      - bbsd_restart

  - name: show bbsd service status
    shell: systemctl status bbsd
    become: true
    tags:
      - bbsd
      - bbsd_status


  - name: install haproxy.cfg
    template:
      dest: /etc/haproxy/haproxy.cfg
      src: files/etc/haproxy/haproxy.cfg
      owner: root
      group: root
      mode: 0o644
    become: true
    tags:
      - haproxy

  - name: start & enable haproxy
    systemd:
      name: haproxy
      state: restarted
      enabled: yes
    become: true
    tags:
      - haproxy
      - haproxy_restart


  - name: refresh OEM software
    git:
      repo: 'https://github.com/dmo9000/z80oem.git'
      dest: ~/git-local/z80oem
    tags:
      - oemsoftware   

  - name: make OEM software available
    shell: cp /home/bootstrap/git-local/z80oem/*.arc /usr/local/bbsd/data/
    become: true
    tags:
      - oemsoftware

  - name: start & enable monit
    systemd:
      name: monit
      state: restarted
      enabled: yes
    become: true
    tags:
      - monit

